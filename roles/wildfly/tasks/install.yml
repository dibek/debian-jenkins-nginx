---

- name: WildFly | Ensure WildFly group exists
  group:
    name: "{{ wildfly_group }}"

- name: Wildfly | Ensure WildFly user exists
  user:
    name: "{{ wildfly_user }}"
    group: "{{ wildfly_group }}"
    shell: "{{ wildfly_user_shell }}"
    createhome: yes
    home: "{{ wildfly_user_home }}"
    uid: "{{ wildfly_user_uid }}"
    state: present

- name: Wildfly | Check installed version
  command: >
    {{wildfly_home_path}}/bin/jboss-cli.sh -c --command=":read-attribute(name=product-version)"
    --user={{ wildfly_management_users.0.name }} --password={{wildfly_management_users.0.password}}
  register: wildfly_check
  changed_when: false
  ignore_errors: true

- name: WildFly | Download WildFly binaries
  get_url:
    url: "{{ wildfly_url }}"
    dest: "/tmp/{{ wildfly_package }}"
  when: wildfly_check|failed or "\"result\" => \"{{ wildfly_version }}\"" not in wildfly_check.stdout

- name: WildFly | Extract wildfly in the install directory
  unarchive:
    copy: no
    src: "/tmp/{{ wildfly_package }}"
    dest: "{{ wildfly_install_path }}"
    owner: "{{ wildfly_user }}"
    group: "{{ wildfly_group }}"
  when: wildfly_check|failed or "\"result\" => \"{{ wildfly_version }}\"" not in wildfly_check.stdout

- name: WildFly | Create Symlink to WildFly
  file:
    src: "{{ wildfly_install_path }}/{{ wildfly_package_name }}"
    dest: "{{ wildfly_install_path }}/wildfly"
    state: link
    owner: "{{ wildfly_user }}"
    group: "{{ wildfly_group }}"
    force: True
  when: wildfly_check|failed or "\"result\" => \"{{ wildfly_version }}\"" not in wildfly_check.stdout
